plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
}

group = 'com.dmz'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mysql'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'
    testImplementation 'org.junit.platform:junit-platform-suite:1.10.2'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation 'io.cucumber:cucumber-java:7.16.1'                   // Gherkin 파싱
    testImplementation 'io.cucumber:cucumber-junit-platform-engine:7.16.1'  // JUnit 5 에서 Cucumber 실행
    testImplementation 'io.cucumber:cucumber-spring:7.16.1'
    // @CucumberContextConfiguration 등 Spring 통합 지원
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    implementation 'org.hibernate:hibernate-spatial:6.2.7.Final'    // Hibernate 에 공간 데이터 지원을 더해주는 확장 모듈
    implementation 'org.locationtech.jts:jts-core:1.19.0'           // 자바 기반의 기하(Geometry) 연산 라이브러리

    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    implementation 'org.hibernate:hibernate-spatial'
    implementation 'org.locationtech.jts:jts-core'
}

tasks.named('test') {
    useJUnitPlatform()
}

def querydslDir = "src/main/generated"

sourceSets {
    main.java.srcDirs += querydslDir
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean {
    delete file(querydslDir)
}

jacoco {
    toolVersion = "0.8.13"
}

jacocoTestReport {
    dependsOn test // 테스트 실행 후 리포트 생성
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
}
